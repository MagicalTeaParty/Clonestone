@model IEnumerable<ClonestoneMVC.Models.tblcard>

@{
    ViewBag.Title = "Index";
}

<div id="gallery">



    @foreach (var item in Model)
    {
        <div class="row col-md-4">
            <div class="col-md-8 vcenter" style="margin-top:25px">
                <div class="container">
                    <div class="row">
                        @Html.DisplayNameFor(model => model.cardname)
                        @Html.DisplayFor(modelItem => item.cardname)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.mana)
                        @Html.DisplayFor(modelItem => item.mana)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.life)
                        @Html.DisplayFor(modelItem => item.life)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.attack)
                        @Html.DisplayFor(modelItem => item.attack)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.flavor)
                        @Html.DisplayFor(modelItem => item.flavor)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.tblability.ability)
                        @Html.DisplayFor(modelItem => item.tblability.ability)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.tblclass.@class)
                        @Html.DisplayFor(modelItem => item.tblclass.@class)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.tbltype.typename)
                        @Html.DisplayFor(modelItem => item.tbltype.typename)
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                @{
                    var base64 = Convert.ToBase64String(item.pic);
                    var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                }
                <img src="@imgSrc" width="100" height="150" />
            </div>
        </div>
                    }
</div>
@{
    int startpositionB = ViewBag.start - 9;
    int startpositionN = ViewBag.start + 9;

    if (ViewBag.start < 9)
    {
        <a href="~/cards/index/?start=@startpositionB" style="visibility:hidden">zurück</a>
    }
    else
    {
        <a href="~/cards/index/?start=@startpositionB">zurück</a>
    }

    if (ViewBag.start > ViewBag.len - 8)
    {
        <a href="~/cards/index/?start=@startpositionN" style="visibility:hidden" >vor</a>

    }
    else
    {
        <a href="~/cards/index/?start=@startpositionN" >vor</a>
    }

}






